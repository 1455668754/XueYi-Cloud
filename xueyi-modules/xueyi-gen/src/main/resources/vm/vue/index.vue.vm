<template>
  <div class="app-container">
    <div class="wrapper-container" v-show="showSearch">
    <el-form :model="queryParams" ref="queryForm" :inline="true" label-width="68px">
#foreach($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.query)
#set($dictType=$column.dictType)
#set($field=$AttrName.substring(0,1).toUpperCase() + ${AttrName.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input")
      <el-form-item label="${comment}" prop="${AttrName}">
        <el-input
          v-model="queryParams.${AttrName}"
          placeholder="请输入${comment}"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"/>
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
      <el-form-item label="${comment}" prop="${AttrName}">
        <el-select v-model="queryParams.${AttrName}" placeholder="请选择${comment}" clearable size="small">
          <el-option
            v-for="dict in ${AttrName}Options"
            :key="dict.dictValue"
            :label="dict.dictLabel"
            :value="dict.dictValue"
          />
        </el-select>
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
      <el-form-item label="${comment}" prop="${AttrName}">
        <el-select v-model="queryParams.${AttrName}" placeholder="请选择${comment}" clearable size="small">
          <el-option label="请选择字典生成" value="" />
        </el-select>
      </el-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
      <el-form-item label="${comment}" prop="${AttrName}">
        <el-date-picker clearable size="small"
          v-model="queryParams.${AttrName}"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="选择${comment}"/>
      </el-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
      <el-form-item label="${comment}">
        <el-date-picker
          v-model="daterange${field}"
          size="small"
          style="width: 240px"
          value-format="yyyy-MM-dd"
          type="daterange"
          range-separator="-"
          start-placeholder="开始日期"
          end-placeholder="结束日期"/>
      </el-form-item>
#end
#end
#end
#end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>
    </div>

    <div class="wrapper-container">
    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['${moduleName}:${businessName}:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['${moduleName}:${businessName}:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['${moduleName}:${businessName}:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['${moduleName}:${businessName}:export']"
        >导出</el-button>
      </el-col>
#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort')
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="el-icon-sort"
          size="mini"
          @click="handleSort"
          v-show="sortVisible"
          v-hasPermi="['${moduleName}:${businessName}:edit']"
        >保存排序</el-button>
      </el-col>
#end
#end
#end
      <right-toolbar :showSearch.sync="showSearch"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') @controlSortable="handleSortable"#end#end#end @queryTable="getList" :columns="columns"/>
    </el-row>

    <el-table v-loading="loading" :data="${businessName}List" @selection-change="handleSelectionChange"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') ref="dataTable" row-key="${pkColumn.javaField}"#end#end#end>
      <el-table-column type="selection" width="55" align="center"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag"#end#end#end/>
      <el-table-column label="序号" align="center" min-width="70" class-name="allowDrag" v-if="columns[0].visible">
        <template slot-scope="scope">
          <span>{{ queryParams.pageSize * (queryParams.pageNum - 1) + scope.$index + 1 }}</span>
        </template>
      </el-table-column>
#set($stepNum = 1)
#foreach($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#set($javaField=$AttrName)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.javaField == $pkColumn.javaField)
#set($stepNum = $stepNum - 1)
#elseif($javaField == 'status' && $column.dictType == 'sys_normal_disable')
      <el-table-column label="${comment}" align="center" key="${javaField}" prop="${javaField}" min-width="120"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag" v-if="columns[${stepNum}].visible"#end#end#end>
        <template slot-scope="scope">
          <el-switch
              v-model="scope.row.${javaField}"
              active-value="0"
              inactive-value="1"
              @change="handleStatusChange(scope.row)"
          />
        </template>
      </el-table-column>
#elseif($column.pk)
      <el-table-column label="${comment}" align="center" key="${javaField}" prop="${javaField}" min-width="120"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag" v-if="columns[${stepNum}].visible"#end#end#end/>
#elseif($column.list && $column.htmlType == "datetime")
      <el-table-column label="${comment}" align="center" key="${javaField}" prop="${javaField}" min-width="180"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag" v-if="columns[${stepNum}].visible"#end#end#end>
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.${javaField}, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
#elseif($column.list && "" != $column.dictType)
      <el-table-column label="${comment}" align="center" key="${javaField}" prop="${javaField}" min-width="120"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag" v-if="columns[${stepNum}].visible"#end#end#end>
        <template slot-scope="scope">
          <dict-tag :options="${javaField}Options" :value="scope.row.${javaField}"/>
        </template>
      </el-table-column>
#elseif($column.list && "" != $javaField)
      <el-table-column label="${comment}" align="center" key="${javaField}" prop="${javaField}" min-width="120"#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') class-name="allowDrag" v-if="columns[${stepNum}].visible"#end#end#end/>
#else
#set($stepNum = $stepNum - 1)
#end
#else
#set($stepNum = $stepNum - 1)
#end
#set($stepNum = $stepNum + 1)
#end
      <el-table-column label="操作" align="center" min-width="120" class-name="small-padding fixed-width#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort') allowDrag#end#end#end">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['${moduleName}:${businessName}:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['${moduleName}:${businessName}:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />
    </div>

    <!-- 添加或修改${functionName}对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="600px" append-to-body v-dialogDrag v-dialogDragHeight>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
#foreach($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#set($field=$AttrName)
#if($column.insert && !$column.pk)
#if(($column.usableColumn) || (!$column.superColumn))
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#set($dictType=$column.dictType)
#if($column.htmlType == "input")
        <el-form-item label="${comment}" prop="${field}">
          <el-input v-model="form.${field}" placeholder="请输入${comment}" />
        </el-form-item>
#elseif($column.htmlType == "imageUpload")
        <el-form-item label="${comment}">
          <imageUpload v-model="form.${field}"/>
        </el-form-item>
#elseif($column.htmlType == "fileUpload")
        <el-form-item label="${comment}">
          <fileUpload v-model="form.${field}"/>
        </el-form-item>
#elseif($column.htmlType == "editor")
        <el-form-item label="${comment}">
          <editor v-model="form.${field}" :min-height="192"/>
        </el-form-item>
#elseif($column.htmlType == "select" && "" != $dictType)
        <el-form-item label="${comment}" prop="${field}">
          <el-select v-model="form.${field}" placeholder="请选择${comment}">
            <el-option
              v-for="dict in ${field}Options"
              :key="dict.dictValue"
              :label="dict.dictLabel"
              #if($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.dictValue)"#else:value="dict.dictValue"#end

            ></el-option>
          </el-select>
        </el-form-item>
#elseif($column.htmlType == "select" && $dictType)
        <el-form-item label="${comment}" prop="${field}">
          <el-select v-model="form.${field}" placeholder="请选择${comment}">
            <el-option label="请选择字典生成" value="" />
          </el-select>
        </el-form-item>
#elseif($column.htmlType == "checkbox" && "" != $dictType)
        <el-form-item label="${comment}">
          <el-checkbox-group v-model="form.${field}">
            <el-checkbox
              v-for="dict in ${field}Options"
              :key="dict.dictValue"
              :label="dict.dictValue">
              {{dict.dictLabel}}
            </el-checkbox>
          </el-checkbox-group>
        </el-form-item>
#elseif($column.htmlType == "checkbox" && $dictType)
        <el-form-item label="${comment}">
          <el-checkbox-group v-model="form.${field}">
            <el-checkbox>请选择字典生成</el-checkbox>
          </el-checkbox-group>
        </el-form-item>
#elseif($column.htmlType == "radio" && "" != $dictType)
        <el-form-item label="${comment}">
          <el-radio-group v-model="form.${field}">
            <el-radio
              v-for="dict in ${field}Options"
              :key="dict.dictValue"
              #if($column.javaType == "Integer" || $column.javaType == "Long"):label="parseInt(dict.dictValue)"#else:label="dict.dictValue"#end

            >{{dict.dictLabel}}</el-radio>
          </el-radio-group>
        </el-form-item>
#elseif($column.htmlType == "radio" && $dictType)
        <el-form-item label="${comment}">
          <el-radio-group v-model="form.${field}">
            <el-radio label="1">请选择字典生成</el-radio>
          </el-radio-group>
        </el-form-item>
#elseif($column.htmlType == "datetime")
        <el-form-item label="${comment}" prop="${field}">
          <el-date-picker clearable size="small"
            v-model="form.${field}"
            type="date"
            value-format="yyyy-MM-dd"
            placeholder="选择${comment}">
          </el-date-picker>
        </el-form-item>
#elseif($column.htmlType == "textarea")
        <el-form-item label="${comment}" prop="${field}">
          <el-input v-model="form.${field}" type="textarea" placeholder="请输入内容" />
        </el-form-item>
#end
#end
#end
#end
#end
#if($table.sub)
        <el-divider content-position="center">${subTable.functionName}信息</el-divider>
        <el-row :gutter="10" class="mb8">
          <el-col :span="1.5">
            <el-button type="primary" icon="el-icon-plus" size="mini" @click="handleAdd${subClassNameNoPrefix}">添加</el-button>
          </el-col>
          <el-col :span="1.5">
            <el-button type="danger" icon="el-icon-delete" size="mini" @click="handleDelete${subClassNameNoPrefix}">删除</el-button>
          </el-col>
        </el-row>
        <el-table :data="subList" :row-class-name="row${subClassNameNoPrefix}Index" @selection-change="handle${subClassNameNoPrefix}SelectionChange" ref="${subclassNameNoPrefix}">
          <el-table-column type="selection" width="50" align="center" />
          <el-table-column label="序号" align="center" prop="index" width="50"/>
#foreach($column in $subTable.columns)
#set($conceal = true)
#foreach($item in $XMLExcisionSubEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#set($javaField=$AttrName)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.pk || $column.javaField == ${subTableFkclassName})
#elseif($column.list && "" != $javaField)
          <el-table-column label="$comment" prop="${javaField}">
            <template slot-scope="scope">
              <el-input v-model="scope.row.$javaField" placeholder="请输入$comment" />
            </template>
          </el-table-column>
#end
#end
#end
        </el-table>
#end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" :loading="submitLoading" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { list${BusinessName}, get${BusinessName}, del${BusinessName}, add${BusinessName}, update${BusinessName}#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort'), update${BusinessName}Sort#end#end#end } from "@/api/${moduleName}/${businessName}";
#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort')import Sortable from "sortablejs";#end#end#end

export default {
  name: "${BusinessName}",
  data() {
    return {
      // 遮罩层
      loading: true,
      // 提交状态
      submitLoading: false,
      // 选中数组
      ids: [],
#foreach ($column in $columns)
#if($column.javaField == 'name')
      idNames:[],
#end
#end
#if($table.sub)
      // 子表选中数据
      checked${subClassNameNoPrefix}: [],
#end
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // ${functionName}表格数据
      ${businessName}List: [],
#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort')
      // ${functionName}表格原始数据
      old${BusinessName}List: [],
      // 排序保存按钮显示
      sortVisible: false,
      // 排序参数
      sortable:null,
#end
#end
#end
#if($table.sub)
      // ${subTable.functionName}表格数据
      subList: [],
#end
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
#foreach ($column in $columns)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if(${column.dictType} != '')
      // $comment字典
      ${column.javaField}Options: [],
#elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
      // $comment时间范围
      daterange${AttrName}: [],
#end
#end
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
#foreach ($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.query)
        $AttrName: null#if($velocityCount != $columns.size()),#end

#end
#end
#end
      },
      // 列信息
      columns: [
#set($stepNum = 0)
#foreach ($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.javaField == $pkColumn.javaField)
        {key: ${stepNum}, label: `序号`, visible: true},
#elseif(($column.javaField == 'status' && $column.dictType == 'sys_normal_disable') || $column.pk || ($column.list && $column.htmlType == "datetime") || ($column.list && "" != $column.dictType) || ($column.list && "" != $column.javaField))
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
        {key: ${stepNum}, label: `${comment}`, visible: true}#if($stepNum != $columns.size() - 1),
#end
#else
#set($stepNum = $stepNum - 1)
#end
#else
#set($stepNum = $stepNum - 1)
#end
#set($stepNum = $stepNum + 1)
#end

      ],
      // 表单参数
      form: {},
      // 表单校验
      rules: {
#foreach ($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.required)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
        $AttrName: [
          { required: true, message: "$comment不能为空", trigger: #if($column.htmlType == "select")"change"#else"blur"#end }
        ]#if($velocityCount != $columns.size()),#end

#end
#end
#end
      }
    };
  },
  created() {
    this.getList();
#foreach ($column in $columns)
#if(${column.dictType} != '')
    this.getDict();
#break
#end
#end
  },
  methods: {
    /** 查询${functionName}列表 */
    getList() {
      this.loading = true;
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
      this.queryParams.params = {};
#break
#end
#end
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
      if (null != this.daterange${AttrName} && '' != this.daterange${AttrName}) {
        this.queryParams.params["begin${AttrName}"] = this.daterange${AttrName}[0];
        this.queryParams.params["end${AttrName}"] = this.daterange${AttrName}[1];
      }
#end
#end
      list${BusinessName}(this.queryParams).then(response => {
        this.${businessName}List = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },
#foreach ($column in $columns)
#if(${column.dictType} != '')
    /** 查询字典信息 */
    getDict(){
#foreach ($column in $columns)
#if(${column.dictType} != '')
        this.getDicts("${column.dictType}").then(response => {
            this.${column.javaField}Options = response.data;
        });
#end
#end
    },
#break
#end
#end
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
#foreach ($column in $columns)
#set($conceal = true)
#foreach($item in $excisionEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.htmlType == "radio")
        $AttrName: #if($column.javaType == "Integer" || $column.javaType == "Long")0#else"0"#end#if($velocityCount != $columns.size()),#end

#elseif($column.htmlType == "checkbox")
        $AttrName: []#if($velocityCount != $columns.size()),#end

#else
        $AttrName: null#if($velocityCount != $columns.size()),#end

#end
#end
#end
      };
#if($table.sub)
      this.subList = [];
#end
      this.resetForm("form");
      this.submitLoading = false;
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
      this.daterange${AttrName} = [];
#end
#end
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.${pkColumn.javaField})
#foreach ($column in $columns)
#if($column.javaField == 'name')
      this.idNames = selection.map(item => item.${column.javaField})
#end
#end
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加${functionName}";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const ${pkColumn.javaField} = row.${pkColumn.javaField} || this.ids[0]
      get${BusinessName}({${pkColumn.javaField}: ${pkColumn.javaField}}).then(response => {
        this.form = response.data;
#foreach ($column in $columns)
#if($column.htmlType == "checkbox")
        this.form.$column.javaField = this.form.${column.javaField}.split(",");
#end
#end
#if($table.sub)
        this.subList = response.data.subList;
#end
        this.open = true;
        this.title = "修改${functionName}";
      });
    },
#foreach ($column in $columns)
#if($column.javaField == "status" && $column.dictType == 'sys_normal_disable')
    /** 修改状态按钮操作 */
    handleStatusChange(row) {
      update${BusinessName}({${pkColumn.javaField}: row.${pkColumn.javaField}, status: row.status, updateType: '1'}).then(response => {
        this.msgSuccess(row.status === '0' ? '成功启用':'成功禁用')
      }).catch(() => {
        row.status = row.status === '0' ? '1' : '0'
      })
    },
#break
#end
#end
    /** 提交按钮 */
    submitForm() {
      this.submitLoading = true;
      this.#[[$]]#refs["form"].validate(valid => {
        if (valid) {
#foreach ($column in $columns)
#if($column.htmlType == "checkbox")
          this.form.$column.javaField = this.form.${column.javaField}.join(",");
#end
#end
#if($table.sub)
          this.form.subList = this.subList;
#end
          if (this.form.${pkColumn.javaField} != null) {
            update${BusinessName}(this.form).then(response => {
              this.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            }).catch(() => {
              this.submitLoading = false
            });
          } else {
            add${BusinessName}(this.form).then(response => {
              this.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            }).catch(() => {
              this.submitLoading = false
            });
          }
        }else{
          this.submitLoading = false;
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const ${pkColumn.javaField}s = row.${pkColumn.javaField} || this.ids;
#set($nameVo=0)
#foreach ($column in $columns)
#if($column.javaField == 'name')
      const names = row.name || this.idNames;
#set($nameVo=1)
#end
#end
      let that = this;
#if($nameVo==1)
      this.$confirm('是否确认删除${functionName}"' + names + '"?', "警告", {
#else
      this.$confirm('是否确认删除${functionName}编号为"' + ${pkColumn.javaField}s + '"的数据项?', "警告", {
#end
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return del${BusinessName}(that.updateParamIds(${pkColumn.javaField}s));
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        }).catch(() => {});
    },
#if($table.sub)
	/** ${subTable.functionName}序号 */
    row${subClassNameNoPrefix}Index({ row, rowIndex }) {
      row.index = rowIndex + 1;
    },
    /** ${subTable.functionName}添加按钮操作 */
    handleAdd${subClassNameNoPrefix}() {
      let obj = {};
#foreach($column in $subTable.columns)
#set($conceal = true)
#foreach($item in $XMLExcisionSubEntity)
#if($column.javaField == $item)
#set($conceal = false)
#break
#end
#end
#set($AttrName = $column.javaField)
#foreach($item in $replaceParams.entrySet())
#if($column.javaField == $item.key)
#set($AttrName = $item.value)
#break
#end
#end
#if($conceal)
#if($column.pk || $column.javaField == ${subTableFkclassName})
#elseif($column.list && "" != $javaField)
      obj.$AttrName = "";
#end
#end
#end
      this.subList.push(obj);
    },
    /** ${subTable.functionName}删除按钮操作 */
    handleDelete${subClassNameNoPrefix}() {
      if (this.checked${subClassNameNoPrefix}.length === 0) {
        this.$alert("请先选择要删除的${subTable.functionName}数据", "提示", { confirmButtonText: "确定", });
      } else {
        this.subList.splice(this.checked${subClassNameNoPrefix}[0].index - 1, 1);
      }
    },
    /** 单选框选中数据 */
    handle${subClassNameNoPrefix}SelectionChange(selection) {
      if (selection.length > 1) {
        this.$refs.${subclassNameNoPrefix}.clearSelection();
        this.$refs.${subclassNameNoPrefix}.toggleRowSelection(selection.pop());
      } else {
        this.checked${subClassNameNoPrefix} = selection;
      }
    },
#end
    /** 导出按钮操作 */
    handleExport() {
      this.download('${moduleName}/${businessName}/export', {
        ...this.queryParams
      }, `${functionName}数据.xlsx`)
    }#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort'),
    /** 保存排序按钮操作 */
    handleSort(){
      this.$confirm('是否确认保存新排序?', "警告", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      }).then(() => {
        let params = this.sortOrderListOnlyDynamic(this.${businessName}List, this.old${BusinessName}List, "${pkColumn.javaField}");
        if(params.length>0) {
          return update${BusinessName}Sort(this.updateParamIds(params));
        }
      }).then(() => {
        this.getList();
        this.sortVisible = false;
        this.msgSuccess("保存成功");
      }).catch(() => {});
    },
    /** 排序开关 */
    handleSortable(sortable) {
      if (!this.isMobile()) {
        this.sortable != null && this.sortable.destroy()
        const el = this.$refs.dataTable.$el.querySelectorAll(".el-table__body-wrapper > table > tbody")[0]
        this.sortable = Sortable.create(el, {
          disabled: sortable,
          handle: ".allowDrag",
          onEnd: evt => {
            const targetRow = this.${businessName}List.splice(evt.oldIndex, 1)[0];
            this.${businessName}List.splice(evt.newIndex, 0, targetRow);
            this.sortVisible = true
          }
        })
      }
    }
#end
#end
#end
  }#if($table.crud || $table.sub)#foreach ($co in $columns)#if($co.javaField == 'sort'),
  mounted() {
    this.handleSortable(false);
  }
#end
#end
#end
}
</script>