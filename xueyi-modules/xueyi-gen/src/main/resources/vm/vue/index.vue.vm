<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item)
#set($show = false)
#break
#end
#end
#if($column.isQuery() == false)
#set($show = false)
#end
#if($show)
      <el-form-item label="${column.readNameNoSuffix()}" prop="${column.javaField}">
#if($column.htmlType == 'DatePicker' || $column.htmlType == 'TimePicker')
        <el-date-picker clearable
          v-model="queryParams.${column.javaField}"
#if($column.htmlType == 'DatePicker')
          type="date"
          value-format="yyyy-MM-dd"
#elseif($column.htmlType == 'TimePicker')
          type="datetime"
          value-format="yyyy-MM-dd HH:mm:ss"
#end
          placeholder="请选择"
        />
#elseif($column.dictType == 'Select' || $column.dictType == 'CheckboxGroup' || $column.dictType == 'RadioButtonGroup' || $column.dictType == 'RadioGroup')
        <el-select v-model="queryParams.${column.javaField}" placeholder="请选择"#if($column.dictType == 'RadioGroup') multiple#end clearable>
#if(${column.dictType})
          <el-option
            v-for="dict in dict.type.${column.dictType}"
            :key="dict.value"
            :label="dict.label"
            :value="dict.value"
          />
#else
          <el-option label="请选择字典生成" value="" />
#end
        </el-select>
#else
        <el-input
          v-model="queryParams.${column.javaField}"
          placeholder="请输入"
          clearable
          @keyup.enter.native="handleQuery"
        />
#end
      </el-form-item>
#end
#end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="[${BusinessName}Auth.ADD]"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="[${BusinessName}Auth.EDIT]"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="[${BusinessName}Auth.DELETE]"
        >删除</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList" :columns="columns"/>
    </el-row>

    <el-table v-loading="loading" :data="tableList" @selection-change="handleSelectionChange">
      <el-table-column type="selection" align="center" v-if="columns[0].visible" width="55"/>
      <el-table-column label="序号" align="center" v-if="columns[1].visible" width="80">
        <template v-slot="scope">
          <span>{{ queryParams.pageSize * (queryParams.page - 1) + scope.$index + 1 }}</span>
        </template>
      </el-table-column>
#set($cloumnKey = 2)
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item)
#set($show = false)
#break
#end
#end
#if($column.isList() == false)
#set($show = false)
#end
#if($show)
#set($tableWidth='100')
#if(${column.dictType} || $column.htmlType == 'DatePicker' || $column.htmlType == 'TimePicker')
#set($slot = true)
#end
      <el-table-column label="${column.readNameNoSuffix()}" align="center" prop="${column.javaField}" v-if="columns[${cloumnKey}].visible" :show-overflow-tooltip="true" min-width="${tableWidth}"#if(!$slot)/#end>
#if($slot)
        <template v-slot="scope">
#if($column.htmlType == 'DatePicker' || $column.htmlType == 'TimePicker')
          <span>{{ parseTime(scope.row.${column.javaField}, '{y}-{m}-{d}#if($column.htmlType == 'TimePicker') {h}:{i}:{s}#end') }}</span>
#elseif(${column.dictType})
          <dict-tag :options="dict.type.${column.dictType}" :value="scope.row.${column.javaField}"/>
#end
        </template>
      </el-table-column>
#end
#set($cloumnKey = $cloumnKey + 1)
#end
#end
      <el-table-column label="操作" align="center" v-if="columns[${cloumnKey}].visible" class-name="small-padding fixed-width">
        <template v-slot="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="[${BusinessName}Auth.EDIT]"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="[${BusinessName}Auth.DELETE]"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.page"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改公告对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="780px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
        <el-row>
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item && !$column.isPk())
#set($show = false)
#break
#end
#end
#if($column.isInsert() == false && !$column.isPk())
#set($show = false)
#end
#if($show)
#if($column.htmlType == 'ImageUpload' || $column.htmlType == 'Upload' || $column.htmlType == 'InputTextArea' || $column.htmlType == 'tinymce' || $column.htmlType == 'markdown')
          <el-col :span="24">
#else
          <el-col :span="12">
#end
            <el-form-item label="${column.readNameNoSuffix()}" prop="${column.javaField}">
#if($column.htmlType == 'Input' || $column.htmlType == 'InputPassword' || $column.htmlType == 'InputTextArea')
              <el-input v-model="form.${column.javaField}" placeholder="请输入${column.readNameNoSuffix()}"#if($column.htmlType == 'InputTextArea') type="textarea"#end#if($column.htmlType == 'InputPassword') show-password#end/>
#elseif($column.htmlType == 'Select')
              <el-select v-model="form.${column.javaField}" placeholder="请选择" clearable>
#if(${column.dictType})
                  <el-option
                    v-for="dict in dict.type.${column.dictType}"
                    :key="dict.value"
                    :label="dict.label"
                    :value="dict.value"
                  />
#else
                  <el-option label="请选择字典生成" value="" />
#end
              </el-select>
#elseif($column.htmlType == 'CheckboxGroup' || $column.htmlType == 'RadioButtonGroup' || $column.htmlType == 'RadioGroup')
#if($column.htmlType == 'CheckboxGroup')
#set($component = 'el-radio-group')
#set($componentItem = 'el-option')
#elseif($column.htmlType == 'RadioButtonGroup')
#set($component = 'el-radio-group')
#set($componentItem = 'el-radio-button')
#elseif($column.htmlType == 'RadioGroup')
#set($component = 'el-checkbox-group')
#set($componentItem = 'el-checkbox-group')
#end
              <${component} v-model="form.${column.javaField}">
#if(${column.dictType})
                  <${componentItem}
                      v-for="dict in dict.type.${column.dictType}"
                      :key="dict.value"
                      :label="dict.value"
                      :value="dict.value"
                  >{{ dict.label }}
                  </${componentItem}>
#else
                  <${componentItem} label="请选择字典生成" value=""/>
#end
              </${component}>
#elseif($column.htmlType == 'DatePicker' || $column.htmlType == 'TimePicker')
              <el-date-picker clearable
                v-model="form.${column.javaField}"
#if($column.htmlType == 'DatePicker')
                type="date"
                value-format="yyyy-MM-dd"
#elseif($column.htmlType == 'TimePicker')
                type="datetime"
                value-format="yyyy-MM-dd HH:mm:ss"
#end
                placeholder="请选择"/>
#elseif($column.htmlType == 'ImageUpload')
              <image-upload v-model="form.${column.javaField}"/>
#elseif($column.htmlType == 'Upload')
              <file-upload v-model="form.${column.javaField}"/>
#elseif($column.htmlType == 'tinymce' || $column.htmlType == 'markdown')
              <editor v-model="form.${column.javaField}" :min-height="192"/>
#end
            </el-form-item>
          </el-col>
#end
#end
        </el-row>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { list${BusinessName}Api, get${BusinessName}Api, add${BusinessName}Api, edit${BusinessName}Api, del${BusinessName}Api } from '@/api/${moduleName}/${authorityName}/${businessName}'
import { ${BusinessName}Auth } from '@auth/${moduleName}'

export default {
  name: "${BusinessName}Management",
#if($dictMap)
  /** 字典查询 */
  dicts: [#set($itemIndex=1)#foreach($item in $dictMap.entrySet())#set($itemIndex=$itemIndex+1)'${item.key}'#end#if($itemIndex < $dictMap.size()), #end],
#end
  data() {
    return {
      //权限标识
      ${BusinessName}Auth: ${BusinessName}Auth,
      // 遮罩层
      loading: true,
      // 选中数组
      ${pkColumn.javaField}s: [],
      // 选中数组名称
      ${pkColumn.javaField}Names: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 公告表格数据
      tableList: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 查询参数
      queryParams: {
        page: 1,
        pageSize: 10,
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item)
#set($show = false)
#break
#end
#end
#if($column.isQuery() == false)
#set($show = false)
#end
#if($show)
        ${column.javaField}: undefined,
#end
#end
      },
      // 列信息
      columns: [
        { key: 0, label: `勾选列`, visible: true },
        { key: 1, label: `序号列`, visible: true },
#set($cloumnKey = 2)
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item)
#set($show = false)
#break
#end
#end
#if($column.isList() == false)
#set($show = false)
#end
#if($show)
        { key: ${cloumnKey}, label: `${column.readNameNoSuffix()}`, visible: true },
#set($cloumnKey = $cloumnKey + 1)
#end
#end
        { key: ${cloumnKey}, label: `操作列`, visible: true }
      ],
      // 表单参数
      form: {},
      // 表单校验
      rules: {
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item && !$column.isPk())
#set($show = false)
#break
#end
#end
#if($column.isInsert() == false && !$column.isPk())
#set($show = false)
#end
#if($show)
#if($column.htmlType == 'Select' || $column.htmlType == 'TreeSelect' || $column.htmlType == 'CheckboxGroup' || $column.htmlType == 'RadioButtonGroup' || $column.htmlType == 'RadioGroup')
#set($changeSet=true)
#end
        ${column.javaField}: [
          { required: true, message: "${column.readNameNoSuffix()}不能为空", trigger: #if($changeSet)"change"#else"blur"#end }
        ],
#end
#end
      }
    };
  },
  created() {
    this.getList();
  },
  methods: {
    /** 查询${functionName}列表 */
    getList() {
      this.loading = true;
      list${BusinessName}Api(this.queryParams).then(response => {
        this.tableList = response.items;
        this.total = response.total;
        this.loading = false;
      });
    },
    /** 取消操作 */
    cancel() {
      this.open = false;
      this.reset();
    },
    /** 表单重置 */
    reset() {
      this.form = {
#foreach ($column in $columns)
#set($show = true)
#foreach($item in $mustHideField)
#if($column.javaField == $item && !$column.isPk())
#set($show = false)
#break
#end
#end
#if($column.isInsert() == false && !$column.isPk())
#set($show = false)
#end
#if($show)
        ${column.javaField}: undefined,
#end
#end
      };
      this.resetForm("form");
    },
    /** 搜索操作 */
    handleQuery() {
      this.queryParams.page = 1;
      this.getList();
    },
    /** 重置操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    /** 多选框选中数据 */
    handleSelectionChange(selection) {
      this.${pkColumn.javaField}s = selection.map(item => item.${pkColumn.javaField})
      this.${pkColumn.javaField}Names = selection.map(item => item.#if($nameColumn)${nameColumn.javaField}#else${pkColumn.javaField}#end)
      this.single = selection.length !== 1
      this.multiple = !selection.length
    },
    /** 新增操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加${functionName}";
    },
    /** 修改操作 */
    handleUpdate(row) {
      this.reset();
      const ${pkColumn.javaField} = row.${pkColumn.javaField} || this.${pkColumn.javaField}s
      get${BusinessName}Api(${pkColumn.javaField}).then(response => {
        this.form = response.data;
        this.open = true;
        this.title = "修改${functionName}";
      });
    },
    /** 提交操作 */
    submitForm: function() {
      this.#[[$]]#refs["form"].validate(valid => {
        if (valid) {
          if (this.form.${pkColumn.javaField} != undefined) {
            edit${BusinessName}Api(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            add${BusinessName}Api(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除操作 */
    handleDelete(row) {
      const delIds = row.${pkColumn.javaField} || this.${pkColumn.javaField}s
      const delNames = row.#if($nameColumn)${nameColumn.javaField}#else${pkColumn.javaField}#end || this.${pkColumn.javaField}Names
      this.#[[$modal]]#.confirm('是否确定要删除' + delNames + '？').then(function() {
        return del${BusinessName}Api(delIds);
      }).then(() => {
        this.getList();
        this.#[[$modal]]#.msgSuccess("删除成功！");
      }).catch(() => {});
    }
  }
};
</script>