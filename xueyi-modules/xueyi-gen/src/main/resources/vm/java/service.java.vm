package ${packageName}.service;

import java.util.List;
import ${packageName}.domain.${ClassName};

/**
 * ${functionName} 业务层
 * 
 * @author ${author}
 */
public interface I${ClassName}Service {

    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});
#if($table.tree)

    /**
     * 查询${functionName}树选项列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}Tree(${ClassName} ${className});
#end

    /**
     * 查询${functionName}
     * 
     * @param ${className} ${functionName} | ${pkColumn.javaField} ${functionName}Id
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}ById(${ClassName} ${className});

    /**
     * 新增${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int insert${ClassName}(${ClassName} ${className});

    /**
     * 修改${functionName}
     * 
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int update${ClassName}(${ClassName} ${className});

#if($table.crud || $table.sub)
#foreach ($column in $columns)
#if($column.javaField == 'sort')
    /**
     * 修改${functionName}排序
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int update${ClassName}Sort(${ClassName} ${className});

#end
#end
#end
    /**
     * 删除${functionName}信息
     *
     * @param ${className} ${functionName} | ${pkColumn.javaField} ${functionName}Id
     * @return 结果
     */
    public int delete${ClassName}ById(${ClassName} ${className});
#if(!$table.tree)

    /**
     * 批量删除${functionName}
     * 
     * @param ${className} ${functionName} | params.Ids 需要删除的${functionName}Ids组
     * @return 结果
     */
    public int delete${ClassName}ByIds(${ClassName} ${className});
#end
}