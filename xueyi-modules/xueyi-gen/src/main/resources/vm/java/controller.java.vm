package ${packageName}.controller;

import java.util.List;
import java.io.IOException;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.xueyi.common.log.annotation.Log;
import com.xueyi.common.log.enums.BusinessType;
import com.xueyi.common.security.annotation.RequiresPermissions;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import com.xueyi.common.core.web.controller.BaseController;
import com.xueyi.common.core.web.domain.AjaxResult;
import com.xueyi.common.core.utils.poi.ExcelUtil;

/**
 * ${functionName} 业务处理
 * 
 * @author ${author}
 */
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {

    @Autowired
    private I${ClassName}Service ${classNameNoPrefix}Service;

    /**
     * 查询${functionName}列表
     */
    @RequiresPermissions("${permissionPrefix}:list")
    @GetMapping("/list")
#if($table.crud || $table.sub)
    public AjaxResult list(${ClassName} ${classNameNoPrefix}) {
        startPage();
        List<${ClassName}> list = ${classNameNoPrefix}Service.select${ClassNameNoPrefix}List(${classNameNoPrefix});
        return getDataTable(list);
    }
#elseif($table.tree)
    public AjaxResult list(${ClassName} ${classNameNoPrefix}) {
        List<${ClassName}> list = ${classNameNoPrefix}Service.select${ClassNameNoPrefix}List(${classNameNoPrefix});
        return AjaxResult.success(list);
    }
#end
#if($table.tree)

    /**
     * 查询${functionName}树选项列表
     */
    @GetMapping("/tree")
    public AjaxResult tree(${ClassName} ${classNameNoPrefix}) {
        List<${ClassName}> tree = ${classNameNoPrefix}Service.select${ClassNameNoPrefix}Tree(${classNameNoPrefix});
        return AjaxResult.success(tree);
    }
#end

    /**
     * 导出${functionName}列表
     */
    @RequiresPermissions("${permissionPrefix}:export")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ${ClassName} ${classNameNoPrefix}) {
        List<${ClassName}> list = ${classNameNoPrefix}Service.select${ClassNameNoPrefix}List(${classNameNoPrefix});
        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);
        util.exportExcel(response, list, "${functionName}数据");
    }

    /**
     * 获取${functionName}详细信息
     */
    @RequiresPermissions("${permissionPrefix}:query")
    @GetMapping(value = "/byId")
    public AjaxResult getInfo(${ClassName} ${classNameNoPrefix}) {
        return AjaxResult.success(${classNameNoPrefix}Service.select${ClassNameNoPrefix}By${pkColumn.capJavaField}(${classNameNoPrefix}));
    }

    /**
     * 新增${functionName}
     */
    @RequiresPermissions("${permissionPrefix}:add")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ${ClassName} ${classNameNoPrefix}) {
        return toAjax(${classNameNoPrefix}Service.insert${ClassNameNoPrefix}(${classNameNoPrefix}));
    }

    /**
     * 修改${functionName}
     */
    @RequiresPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ${ClassName} ${classNameNoPrefix}) {
        return toAjax(${classNameNoPrefix}Service.update${ClassNameNoPrefix}(${classNameNoPrefix}));
    }

#if($table.crud || $table.sub)
#foreach ($column in $columns)
#if($column.javaField == 'sort')
    /**
     * 修改${functionName}排序
     */
    @RequiresPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping(value = "/sort")
    public AjaxResult updateSort(@RequestBody ${ClassName} ${classNameNoPrefix}) {
        return toAjax(${classNameNoPrefix}Service.update${ClassNameNoPrefix}Sort(${classNameNoPrefix}));
    }

#end
#end
#end
    /**
     * 删除${functionName}
     */
    @RequiresPermissions("${permissionPrefix}:remove")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
    @DeleteMapping
    public AjaxResult remove(@RequestBody ${ClassName} ${classNameNoPrefix}) {
        return toAjax(${classNameNoPrefix}Service.delete${ClassNameNoPrefix}By${pkColumn.capJavaField}#if(!$table.tree)s#end(${classNameNoPrefix}));
    }
}