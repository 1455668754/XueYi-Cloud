<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.job.mapper.SysJobMapper">

	<resultMap type="SysJob" id="SysJobResult">
		<id     property="jobId"          column="job_id"          />
		<result property="jobName"        column="job_name"        />
		<result property="jobGroup"       column="job_group"       />
		<result property="invokeTarget"   column="invoke_target"   />
		<result property="cronExpression" column="cron_expression" />
		<result property="misfirePolicy"  column="misfire_policy"  />
		<result property="concurrent"     column="concurrent"      />
		<result property="status"         column="status"          />
		<result property="createBy"       column="create_by"       />
		<result property="createTime"     column="create_time"     />
		<result property="updateBy"       column="update_by"       />
		<result property="updateTime"     column="update_time"     />
		<result property="remark"         column="remark"          />
		<result property="enterpriseId"   column="tenant_id"       />
	</resultMap>
	
	<sql id="selectJobVo">
        select j.job_id, j.job_name, j.job_group, j.invoke_target, j.cron_expression, j.misfire_policy, j.concurrent, j.status, j.create_by, j.create_time, j.remark, j.tenant_id
		from sys_job j
    </sql>

	<select id="selectJobList" parameterType="SysJob" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where 1 = 1
		<if test="jobName != null and jobName != ''">
			AND j.job_name like concat('%', #{jobName}, '%')
		</if>
		<if test="jobGroup != null and jobGroup != ''">
			AND j.job_group = #{jobGroup}
		</if>
		<if test="status != null and status != ''">
			AND j.status = #{status}
		</if>
		<if test="invokeTarget != null and invokeTarget != ''">
			AND j.invoke_target like concat('%', #{invokeTarget}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
	</select>
	
	<select id="selectJobById" parameterType="Long" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where j.job_id = #{jobId}
	</select>
	
	<delete id="deleteJobById" parameterType="Long">
 		delete from sys_job where job_id = #{jobId}
 	</delete>
 	
 	<delete id="deleteJobByIds" parameterType="Long">
 		delete from sys_job where job_id in
 		<foreach collection="array" item="jobId" open="(" separator="," close=")">
 			#{jobId}
        </foreach> 
 	</delete>
 	
 	<update id="updateJob" parameterType="SysJob">
 		update sys_job
		<trim prefix="SET" suffixOverrides=",">
 			<if test="jobName != null and jobName != ''">				job_name = #{jobName}					,</if>
 			<if test="jobGroup != null and jobGroup != ''">				job_group = #{jobGroup}					,</if>
 			<if test="invokeTarget != null and invokeTarget != ''">		invoke_target = #{invokeTarget}			,</if>
 			<if test="cronExpression != null and cronExpression != ''">	cron_expression = #{cronExpression}		,</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">	misfire_policy = #{misfirePolicy}		,</if>
 			<if test="concurrent != null and concurrent != ''">			concurrent = #{concurrent}				,</if>
			<if test="status != null and status != ''">                	status = #{status}             			,</if>
			<if test="updateBy != null">                               	update_by = #{updateBy}        			,</if>
			<if test="remark != null">                                 	remark = #{remark}             			,</if>
		</trim>
 		where job_id = #{jobId}
	</update>

	<insert id="insertJob" parameterType="SysJob" useGeneratedKeys="true" keyProperty="jobId">
		insert into sys_job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">							job_id					,</if>
			<if test="jobName != null and jobName != ''">				job_name				,</if>
			<if test="jobGroup != null and jobGroup != ''">				job_group				,</if>
			<if test="invokeTarget != null and invokeTarget != ''">		invoke_target			,</if>
			<if test="cronExpression != null and cronExpression != ''">	cron_expression			,</if>
			<if test="misfirePolicy != null and misfirePolicy != ''">	misfire_policy			,</if>
			<if test="concurrent != null and concurrent != ''">			concurrent				,</if>
			<if test="status != null and status != ''">                	status                  ,</if>
			<if test="createBy != null">                               	create_by               ,</if>
			<if test="remark != null and remark != ''">                	remark                  ,</if>
			<if test="enterpriseId != null">                           	tenant_id               ,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">							#{Id}					,</if>
			<if test="jobName != null and jobName != ''">				#{jobName}				,</if>
			<if test="jobGroup != null and jobGroup != ''">				#{jobGroup}				,</if>
			<if test="invokeTarget != null and invokeTarget != ''">		#{invokeTarget}			,</if>
			<if test="cronExpression != null and cronExpression != ''">	#{cronExpression}		,</if>
			<if test="misfirePolicy != null and misfirePolicy != ''">	#{misfirePolicy}		,</if>
			<if test="concurrent != null and concurrent != ''">			#{concurrent}			,</if>
			<if test="status != null and status != ''">                	#{status}               ,</if>
			<if test="createBy != null">                               	#{createBy}             ,</if>
			<if test="remark != null and remark != ''">                	#{remark}               ,</if>
			<if test="enterpriseId != null">                           	#{enterpriseId}         ,</if>
		</trim>
	</insert>

</mapper> 