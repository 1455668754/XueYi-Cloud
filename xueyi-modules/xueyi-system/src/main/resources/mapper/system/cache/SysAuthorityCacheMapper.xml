<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.cache.mapper.SysAuthorityCacheMapper">

    <!--  路由、菜单、模块、模块-菜单 缓存封装对象  -->
    <resultMap type="CacheInitVo" id="CacheInitResult">
        <result property="enterpriseId"     column="tenant_id"      />
        <result property="systemId"         column="system_id"      />
        <collection  property="menuSet"         javaType="java.util.Set" resultMap="routeResult"        />
        <collection  property="systemSet"       javaType="java.util.Set" resultMap="systemResult"       />
        <collection  property="systemMenuSet"   javaType="java.util.Set" resultMap="systemMenuResult"   />
    </resultMap>

    <resultMap type="SysMenu" id="routeResult">
        <id     property="menuId"           column="menu_menu_id"        />
        <result property="systemId"         column="menu_system_id"      />
        <result property="name"             column="menu_name"           />
        <result property="parentId"         column="menu_parent_id"      />
        <result property="parentName"       column="menu_parent_name"    />
        <result property="path"             column="menu_path"           />
        <result property="component"        column="menu_component"      />
        <result property="query"          	column="menu_query"          />
        <result property="isCommon"         column="menu_is_common"      />
        <result property="isChange"         column="menu_is_change"      />
        <result property="isFrame"          column="menu_is_frame"       />
        <result property="isCache"          column="menu_is_cache"       />
        <result property="menuType"         column="menu_menu_type"      />
        <result property="visible"          column="menu_visible"        />
        <result property="perms"            column="menu_perms"          />
        <result property="icon"             column="menu_icon"           />
        <result property="status"           column="menu_status"         />
        <result property="sort"             column="menu_sort"           />
    </resultMap>

    <resultMap type="SysSystem" id="systemResult">
        <id     property="systemId"         column="system_system_id"   />
        <result property="name"             column="system_name"        />
        <result property="imageUrl"         column="system_image_url"   />
        <result property="type"             column="system_type"        />
        <result property="route"            column="system_route"       />
        <result property="isCommon"         column="system_is_common"   />
        <result property="isChange"         column="system_is_change"   />
        <result property="isNew"            column="system_is_new"      />
        <result property="visible"          column="system_visible"     />
        <result property="sort"       		column="system_sort"        />
        <result property="status"       	column="system_status"      />
        <result property="remark" 			column="system_remark" 	    />
    </resultMap>

    <resultMap type="SystemMenu" id="systemMenuResult">
        <id     property="Uid"              column="s_m_uid"            />
        <result property="FUid"             column="s_m_f_uid"          />
        <result property="name"             column="s_m_name"           />
        <result property="type"             column="s_m_type"           />
        <result property="sort"             column="s_m_sort"           />
    </resultMap>

    <sql id="routeCacheVo">
        select distinct m.tenant_id, m.system_id, m.menu_id as menu_menu_id, m.system_id as menu_system_id, m.name as menu_name, m.parent_id as menu_parent_id, m.path as menu_path, m.component as menu_component, m.query as menu_query, m.is_common as menu_is_common,
                        m.is_change as menu_is_change, m.is_frame as menu_is_frame, m.is_cache as menu_is_cache, m.menu_type as menu_menu_type, m.visible as menu_visible, m.status as menu_status, ifnull(m.perms, '') as menu_perms, m.icon as menu_icon, m.sort as menu_sort
        from sys_menu m
    </sql>

    <sql id="menuCacheVo">
        select distinct m.tenant_id, m.menu_id as menu_menu_id, m.system_id as menu_system_id, m.name as menu_name, m.parent_id as menu_parent_id, m.path as menu_path, m.component as menu_component, m.query as menu_query, m.is_common as menu_is_common,
                        m.is_change as menu_is_change, m.is_frame as menu_is_frame, m.is_cache as menu_is_cache, m.menu_type as menu_menu_type, m.visible as menu_visible, m.status as menu_status, ifnull(m.perms, '') as menu_perms, m.icon as menu_icon, m.sort as menu_sort
        from sys_menu m
    </sql>

    <sql id="systemCacheVo">
        select distinct s.tenant_id, s.system_id as system_system_id, s.name as system_name, s.image_url as system_image_url, s.type as system_type, s.route as system_route, s.is_common as system_is_common,
                        s.is_change as system_is_change, s.is_new as system_is_new, s.visible as system_visible, s.status as system_status, s.remark as system_remark, s.sort as system_sort
        from xy_system s
    </sql>

    <sql id="systemMenuCacheVo">
        select sm.tenant_id, s_m_uid, s_m_name, s_m_f_uid, s_m_sort, s_m_type
        from ( select distinct m.tenant_id, m.menu_id as s_m_uid, m.name as s_m_name, if(m.parent_id = 0, m.system_id, m.parent_id) as s_m_f_uid, m.sort as s_m_sort, 1 as s_m_type, m.status as status, m.del_flag as del_flag
             from sys_menu m
             union
             select distinct s.tenant_id, s.system_id as s_m_uid, s.name as s_m_name, -1 as s_m_f_uid, s.sort as s_m_sort, 0 as s_m_type, s.status as status, s.del_flag as del_flag
             from xy_system s ) sm
    </sql>

    <sql id="enterpriseCacheVo">
        select distinct es.tenant_id
        from xy_tenant es
    </sql>

    <sql id="enterpriseSystemCacheVo">
        select distinct es.tenant_id, es.system_id
        from xy_system es
    </sql>

    <select id="mainSelectRouteCacheListBySource" resultMap="CacheInitResult">
        <include refid="routeCacheVo"/>
        where m.menu_type in ('M', 'C') and m.status = 0 and m.del_flag = 0
        order by m.sort
    </select>

    <select id="mainSelectRouteCacheListBySystemId" parameterType="SysSystem" resultMap="CacheInitResult">
        <include refid="routeCacheVo"/>
        where m.system_id = #{systemId} and m.tenant_id = #{enterpriseId} and m.menu_type in ('M', 'C') and m.status = 0 and m.del_flag = 0
        order by m.sort
    </select>

    <select id="mainSelectMenuCacheListBySource" resultMap="CacheInitResult">
        <include refid="menuCacheVo"/>
        where m.status = 0 and m.del_flag = 0
        order by m.sort
    </select>

    <select id="mainSelectMenuCacheListByEnterpriseId" parameterType="Long" resultMap="CacheInitResult">
        <include refid="menuCacheVo"/>
        where m.tenant_id = #{enterpriseId} and m.status = 0 and m.del_flag = 0
        order by m.sort
    </select>

    <select id="mainSelectSystemCacheListBySource" resultMap="CacheInitResult">
        <include refid="systemCacheVo"/>
        where s.status = 0 and s.del_flag = 0
        order by s.sort
    </select>

    <select id="mainSelectSystemCacheListByEnterpriseId" parameterType="Long" resultMap="CacheInitResult">
        <include refid="systemCacheVo"/>
        where s.tenant_id = #{enterpriseId} and s.status = 0 and s.del_flag = 0
        order by s.sort
    </select>

    <select id="mainSelectSystemMenuCacheListBySource" resultMap="CacheInitResult">
        <include refid="systemMenuCacheVo"/>
        where sm.status = 0 and sm.del_flag = 0
        order by sm.s_m_sort
    </select>

    <select id="mainSelectSystemMenuCacheListByEnterpriseId" parameterType="Long" resultMap="CacheInitResult">
        <include refid="systemMenuCacheVo"/>
        where sm.tenant_id = #{enterpriseId} and sm.status = 0 and sm.del_flag = 0
        order by sm.s_m_sort
    </select>

    <select id="mainSelectEnterpriseCacheListByExcludeIds" resultMap="CacheInitResult">
        <choose>
            <when test="systemIds != null and systemIds.size()>0">
                <include refid="enterpriseSystemCacheVo"/>
            </when>
            <otherwise>
                <include refid="enterpriseCacheVo"/>
            </otherwise>
        </choose>
        where es.status = 0 and es.del_flag = 0
        <if test="enterpriseIds !=null and enterpriseIds.size()>0">
            and es.tenant_id not in
            <foreach item="Id" collection="enterpriseIds" open="(" separator="," close=")">
                #{Id}
            </foreach>
        </if>
        <if test="systemIds != null and systemIds.size()>0">
            and es.system_id not in
            <foreach item="Id" collection="systemIds" open="(" separator="," close=")">
                #{Id}
            </foreach>
        </if>
    </select>


</mapper>