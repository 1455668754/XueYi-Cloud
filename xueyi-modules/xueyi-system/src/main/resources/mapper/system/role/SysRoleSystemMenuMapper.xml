<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.role.mapper.SysRoleSystemMenuMapper">

    <resultMap type="SysRoleSystemMenu" id="SysRoleSystemMenuResult">
        <id     property="roleId"           column="role_id"            />
        <result property="systemMenuId"     column="system_menu_id"     />
    </resultMap>

    <select id="selectSystemMenuList" parameterType="com.xueyi.system.api.utilTool.SysSearch" resultMap="SysRoleSystemMenuResult">
        select rsm.role_id, rsm.system_menu_id
        from sys_role_system_menu rsm
        where 1 = 1
        <if test="search.roleId != null">
            AND rsm.role_id = #{search.roleId}
        </if>
        <if test="search.systemMenuId != null">
            AND rsm.system_menu_id = #{search.systemMenuId}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectSystemMenuListOnlyChild" parameterType="com.xueyi.system.api.utilTool.SysSearch" resultMap="SysRoleSystemMenuResult">
        select rsm.role_id, rsm.system_menu_id
        from sys_role_system_menu rsm
        left join (
        select sm1.menu_id as menu_id
        from sys_menu sm1
        left join sys_menu sm2 on sm2.parent_id = sm1.menu_id
        where sm2.parent_id is null
        ) m on m.menu_id = rsm.system_menu_id
        left join (
        select xs.system_id as system_id
        from xy_system xs
        left join sys_menu sm on sm.system_id = xs.system_id
        where sm.system_id is null
        ) s on s.system_id = rsm.system_menu_id
        where ( m.menu_id is not null or s.system_id is not null ) and rsm.role_id = #{search.roleId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="checkSystemMenuExistRole" parameterType="com.xueyi.system.api.utilTool.SysSearch"
            resultType="java.lang.Integer">
        select count(1) from sys_role_system_menu rsm
        where rsm.system_menu_id = #{search.systemMenuId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <insert id="batchRoleSystemMenu" parameterType="com.xueyi.system.api.utilTool.SysSearch">
        insert into sys_role_system_menu (role_id, system_menu_id, tenant_id) values
        <foreach item="systemMenuId" collection="search.systemMenuIds" separator=",">
            (#{search.roleId}, #{systemMenuId}, #{enterpriseId})
        </foreach>
    </insert>

    <delete id="deleteRoleSystemMenuByRoleId" parameterType="com.xueyi.system.api.utilTool.SysSearch">
        delete from sys_role_system_menu
        where role_id = #{search.roleId}
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </delete>

    <delete id="deleteRoleSystemMenuBySystemMenuId" parameterType="com.xueyi.system.api.utilTool.SysSearch">
        delete from sys_role_system_menu
        where system_menu_id = #{search.systemMenuId}
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </delete>

    <delete id="deleteRoleSystemMenuByIds" parameterType="com.xueyi.system.api.utilTool.SysSearch">
        delete from sys_role_system_menu where role_id in
        <foreach item="roleId" collection="search.roleIds" open="(" separator="," close=")">
            #{roleId}
        </foreach>
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </delete>
</mapper>