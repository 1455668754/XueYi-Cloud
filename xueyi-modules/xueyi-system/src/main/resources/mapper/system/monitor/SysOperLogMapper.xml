<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.monitor.mapper.SysOperLogMapper">

	<resultMap type="SysOperLog" id="SysOperLogResult">
		<id     property="operId"         	column="oper_id"        />
		<result property="title"          	column="title"          />
		<result property="businessType"   	column="business_type"  />
		<result property="method"         	column="method"         />
		<result property="requestMethod"  	column="request_method" />
		<result property="operatorType"   	column="operator_type"  />
		<result property="userId"       	column="user_id"      	/>
		<result property="userName"       	column="user_name"      />
		<result property="userNick"       	column="user_nick"      />
		<result property="operUrl"        	column="oper_url"       />
		<result property="operIp"         	column="oper_ip"        />
		<result property="operParam"      	column="oper_param"     />
		<result property="jsonResult"     	column="json_result"    />
		<result property="status"         	column="status"         />
		<result property="errorMsg"       	column="error_msg"      />
		<result property="operTime"       	column="oper_time"      />
	</resultMap>

	<sql id="selectVo">
        select ol.oper_id, ol.title, ol.business_type, ol.method, ol.request_method, ol.operator_type, ol.user_id, ol.oper_url, ol.oper_ip, ol.oper_param, ol.json_result, ol.status, ol.error_msg, ol.oper_time,
        u.user_name as user_name, u.nick_name as user_nick
        from sys_oper_log ol
		left join sys_user u on u.user_id = ol.user_id
		left join sys_post p on p.post_id = u.post_id
		left join sys_dept d on d.dept_id = u.dept_id
    </sql>

	<sql id="updateVo">
		update sys_oper_log
		set del_flag = 1
	</sql>

	<insert id="insertOperlog" parameterType="SysOperLog">
		insert into sys_oper_log(title, business_type, method, request_method, operator_type, user_id, oper_url, oper_ip, oper_param, json_result, status, error_msg, tenant_id)
        values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{userId}, #{operUrl}, #{operIp}, #{operParam}, #{jsonResult}, #{status}, #{errorMsg}, #{enterpriseId})
	</insert>

	<select id="selectOperLogList" parameterType="SysOperLog" resultMap="SysOperLogResult">
		<include refid="selectVo"/>
		where 1 = 1
		<if test="title != null and title != ''">
			AND ol.title like concat('%', #{title}, '%')
		</if>
		<if test="businessType != null and businessType != ''">
			AND ol.business_type = #{businessType}
		</if>
		<if test="businessTypes != null and businessTypes.length > 0">
			AND ol.business_type in
			<foreach collection="businessTypes" item="businessType" open="(" separator="," close=")">
				#{businessType}
			</foreach>
		</if>
		<if test="status != null">
			AND ol.status = #{status}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="userNick != null and userNick != ''">
			AND u.nick_name like concat('%', #{userNick}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			and date_format(ol.oper_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			and date_format(ol.oper_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by ol.oper_id desc
	</select>

 	<select id="selectOperLogById" parameterType="SysOperLog" resultMap="SysOperLogResult">
		<include refid="selectVo"/>
		where oper_id = #{operId}
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<delete id="deleteOperLogByIds" parameterType="SysOperLog">
		<include refid="updateVo"/>
		where oper_id in
		<foreach collection="params.Ids" item="operId" open="(" separator="," close=")">
			#{operId}
		</foreach>
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</delete>

	<update id="cleanOperLog" parameterType="SysOperLog">
		<include refid="updateVo"/>
		where 1 = 1
		<!-- 数据范围过滤 -->
		${params.updateScope}
    </update>

</mapper>
