<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.organize.mapper.SysEnterpriseMapper">

    <resultMap type="SysEnterprise" id="SysEnterpriseResult">
        <id     property="enterpriseId"                 column="tenant_id"                  />
        <result property="enterpriseName"               column="tenant_name"                />
        <result property="enterpriseSystemName"         column="tenant_system_name"         />
        <result property="enterpriseNick"               column="tenant_nick"                />
        <result property="logo"                         column="tenant_logo"                />
        <result property="enterpriseNameFrequency"      column="tenant_name_frequency"      />
        <result property="datasource"                   column="datasource"                 />
        <result property="createBy"   		            column="create_by"                  />
        <result property="createName"               	column="create_name"                />
        <result property="createTime" 	            	column="create_time"                />
        <result property="updateBy"   	            	column="update_by"                  />
        <result property="updateName"               	column="update_name"                />
        <result property="updateTime" 	            	column="update_time"                />
    </resultMap>

    <sql id="selectVo">
        select e.tenant_id, e.tenant_name, e.tenant_system_name, e.tenant_nick, e.tenant_logo, e.tenant_name_frequency, e.create_by, e.create_time, e.update_by, e.update_time
        from xy_tenant e
    </sql>

    <sql id="checkVo">
        select e.tenant_id, e.tenant_name, e.tenant_system_name, e.tenant_nick, e.tenant_logo, e.tenant_name_frequency, e.create_by, e.create_time, e.update_by, e.update_time
        from xy_tenant e
    </sql>

    <sql id="logoVo">
        select e.tenant_system_name, e.tenant_logo
        from xy_tenant e
    </sql>

    <select id="checkLoginByEnterpriseName" parameterType="com.xueyi.system.api.utilTool.SysSearch" resultMap="SysEnterpriseResult">
        <include refid="selectVo"/>
        where e.tenant_name=#{search.enterpriseName} and e.status = '0' and e.del_flag = 0
    </select>

    <select id="selectEnterpriseById" parameterType="com.xueyi.system.api.utilTool.SysSearch" resultMap="SysEnterpriseResult">
        <include refid="checkVo"/>
        where 1 = 1
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <update id="updateLogo" parameterType="com.xueyi.system.api.utilTool.SysSearch">
        update xy_tenant
        <trim prefix="SET" suffixOverrides=",">
            <if test="search.logoUrl != null and search.logoUrl != ''">	      tenant_logo = #{search.logoUrl}	    ,</if>
            <if test="updateBy != null">		                              update_by = #{updateBy}		        ,</if>
        </trim>
        where tenant_id = #{enterpriseId}
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </update>

    <update id="updateEnterprise" parameterType="SysEnterprise">
        update xy_tenant
        <trim prefix="SET" suffixOverrides=",">
            <if test="enterpriseSystemName != null and enterpriseSystemName != ''">	        tenant_system_name = #{enterpriseSystemName}	    ,</if>
            <if test="enterpriseNick != null and enterpriseNick != ''">	                    tenant_nick = #{enterpriseNick}	                    ,</if>
            <if test="updateBy != null">		                                            update_by = #{updateBy}		                        ,</if>
        </trim>
        where tenant_id = #{enterpriseId}
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </update>

    <update id="changeEnterpriseName" parameterType="SysEnterprise">
        update xy_tenant
        <trim prefix="SET" suffixOverrides=",">
            <if test="enterpriseName != null and enterpriseName != ''">	      tenant_name = #{enterpriseName}	                    ,</if>
            <if test="updateBy != null">		                              update_by = #{updateBy}		                        ,</if>
            <if test="enterpriseName != null and enterpriseName != ''">	      tenant_name_frequency = tenant_name_frequency + 1     ,</if>
        </trim>
        where tenant_id = #{enterpriseId}
        <!-- 数据范围过滤 -->
        ${params.updateScope}
    </update>

    <select id="checkEnterpriseNameUnique" parameterType="SysEnterprise" resultMap="SysEnterpriseResult">
        <include refid="checkVo"/>
        where tenant_name = #{enterpriseName}
    </select>
</mapper>
