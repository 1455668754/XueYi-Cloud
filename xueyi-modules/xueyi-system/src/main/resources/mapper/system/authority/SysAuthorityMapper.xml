<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.authority.mapper.SysAuthorityMapper">

    <resultMap type="SysRole" id="RoleResult">
        <id     property="roleId"             	column="role_id"               />
        <result property="roleCode"           	column="role_code"             />
        <result property="name"           		column="name"             	   />
        <result property="roleKey"            	column="role_key"              />
        <result property="dataScope"          	column="data_scope"            />
        <result property="menuCheckStrictly"  	column="menu_check_strictly"   />
        <result property="deptCheckStrictly"  	column="dept_check_strictly"   />
        <result property="type"   				column="type"   	 		   />
        <result property="deriveId"   			column="derive_id"   	 	   />
        <result property="sort"   				column="sort"   	 		   />
        <result property="status"     			column="status"      		   />
        <result property="createBy"   		    column="create_by"             />
        <result property="createName"   	    column="create_name"           />
        <result property="createTime" 		    column="create_time"           />
        <result property="updateBy"   	        column="update_by"             />
        <result property="updateName"           column="update_name"           />
        <result property="updateTime" 	        column="update_time"           />
        <result property="remark" 				column="remark" 	 		   />
    </resultMap>

    <sql id="organizeVo">
        select distinct sor.role_id
        from sys_organize_role sor
    </sql>

    <select id="selectRoleListByTenantId" parameterType="SysRole" resultType="Long">
        <include refid="organizeVo"/>
        where sor.derive_administrator_id = #{enterpriseId} and sor.tenant_id = #{enterpriseId} and sor.del_flag = 0
    </select>

    <select id="selectRoleListByEnterpriseId" parameterType="SysRole" resultType="Long">
        <include refid="organizeVo"/>
        where sor.derive_tenant_id = #{enterpriseId} and sor.derive_administrator_id = #{enterpriseId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectRoleListByDeptId" parameterType="SysRole" resultType="Long">
        <include refid="organizeVo"/>
        left join sys_dept d on d.dept_id = sor.dept_id or d.dept_id = sor.derive_dept_id or d.tenant_id = sor.derive_tenant_id or d.tenant_id = sor.derive_administrator_id
        where d.dept_id = #{params.deptId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectRoleListByPostId" parameterType="SysRole" resultType="Long">
        <include refid="organizeVo"/>
        left join sys_post p on p.post_id = sor.post_id or p.post_id = sor.derive_post_id or p.dept_id = sor.dept_id or p.dept_id = sor.derive_dept_id or p.tenant_id = sor.derive_tenant_id or p.tenant_id = sor.derive_administrator_id
        where p.post_id = #{params.postId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectRoleListByUserId" parameterType="SysRole" resultType="Long">
        <include refid="organizeVo"/>
        left join sys_user u on u.user_id = sor.user_id or u.user_id = sor.derive_user_id or u.post_id = sor.post_id or u.post_id = sor.derive_post_id or u.dept_id = sor.dept_id or u.dept_id = sor.derive_dept_id or u.tenant_id = sor.derive_tenant_id or u.tenant_id = sor.derive_administrator_id
        where u.user_id = #{params.userId}
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

</mapper>
