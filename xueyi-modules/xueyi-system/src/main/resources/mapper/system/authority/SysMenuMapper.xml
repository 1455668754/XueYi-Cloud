<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.authority.mapper.SysMenuMapper">

	<resultMap type="SysMenu" id="SysMenuResult">
		<id     property="menuId"           column="menu_id"        />
		<result property="systemId"         column="system_id"      />
		<result property="menuName"         column="menu_name"      />
		<result property="parentName"       column="parent_name"    />
		<result property="parentId"         column="parent_id"      />
		<result property="path"             column="path"           />
		<result property="component"        column="component"      />
		<result property="isFrame"          column="is_frame"       />
		<result property="isCache"          column="is_cache"       />
		<result property="menuType"         column="menu_type"      />
		<result property="visible"          column="visible"        />
		<result property="perms"            column="perms"          />
		<result property="icon"             column="icon"           />
		<result property="isMain"           column="is_main"     	/>
		<result property="sort"             column="sort"           />
		<result property="status"           column="status"         />
		<result property="createBy"   		column="create_by"      />
		<result property="createName"   	column="create_name"    />
		<result property="createTime" 		column="create_time"    />
		<result property="updateBy"   		column="update_by"      />
		<result property="updateName"   	column="update_name"    />
		<result property="updateTime" 		column="update_time"    />
		<result property="remark"           column="remark"         />
	</resultMap>

	<sql id="selectVo">
		select m.menu_id, m.system_id, m.menu_name, m.parent_id, m.sort, m.path, m.component, m.is_frame, m.is_cache, m.menu_type, m.visible, m.status, ifnull(perms, '') as perms, m.icon, m.create_time
		from sys_menu m
	</sql>

	<sql id="selectPermsVo">
		select distinct m.perms
		from sys_menu m
	</sql>

	<sql id="selectTreeVo">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status,
						ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.sort, m.create_time
		from sys_menu m
	</sql>

	<sql id="selectOnlyChildVo">
		select m.menu_id,m.system_id
		from sys_menu m
				 left join sys_menu m2 on m2.parent_id = m.menu_id
	</sql>

	<sql id="checkVo">
		select m.menu_id, m.menu_name, m.parent_id, m.sort, m.path, m.component, m.is_frame, m.is_cache, m.menu_type, m.visible, m.status,
			   ifnull(perms, '') as perms
		from sys_menu m
	</sql>

	<sql id="countVo">
		select count(1)
		from sys_menu m
	</sql>

	<!--未登录用户的登录校验方法，不允许加访问控制-->
	<select id="checkLoginMenuPermission" parameterType="SysMenu" resultType="String">
		<include refid="selectPermsVo"/>
		where  m.status = 0 and ( m.tenant_id = #{enterpriseId} or m.tenant_id = 0 ) and m.del_flag = 0
		<if test="null != params.roleSystemPerms and params.roleSystemPerms.size > 0">
			and m.menu_id in
			<foreach collection="params.roleSystemPerms" index="index" item="item" open="(" separator="," close=")">
				#{item.systemMenuId}
			</foreach>
		</if>
		<if test="null == params.roleSystemPerms or params.roleSystemPerms.size == 0">
			and 1 != 1
		</if>
	</select>

	<select id="selectSystemMenuListOnlyChild" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectOnlyChildVo"/>
		where m2.menu_id is null
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectMenuTreeByUserId" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectTreeVo"/>
		where m.menu_type in ('M', 'C') and m.status = 0
		<if test="null != params.roleSystemPerms and params.roleSystemPerms.size > 0">
			and m.menu_id in
			<foreach collection="params.roleSystemPerms" index="index" item="item" open="(" separator="," close=")">
				#{item.systemMenuId}
			</foreach>
		</if>
		<if test="null == params.roleSystemPerms or params.roleSystemPerms.size == 0">
			and 1 != 1
		</if>
		<choose>
			<when test="params.onlyList != null and params.onlyList.size() > 0">
				and m.menu_id in
				<foreach collection="params.onlyList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
			<when test="params.excludeList != null and params.excludeList.size() > 0">
				and m.menu_id not in
				<foreach collection="params.excludeList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
		</choose>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by m.parent_id, m.sort
	</select>

	<select id="selectMenuTreeByAdminUserId" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectTreeVo"/>
		where m.menu_type in ('M', 'C') and m.status = 0
		<choose>
			<when test="params.onlyList != null and params.onlyList.size() > 0">
				and m.menu_id in
				<foreach collection="params.onlyList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
			<when test="params.excludeList != null and params.excludeList.size() > 0">
				and m.menu_id not in
				<foreach collection="params.excludeList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
		</choose>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by m.parent_id, m.sort
	</select>

	<select id="buildSystemMenuTreeSelect" parameterType="SysMenu" resultMap="SysMenuResult">
		select m.menu_id, m.system_id, m.menu_name, if(m.parent_id = 0, m.system_id, m.parent_id) as parent_id, m.sort, m.path, m.component, m.is_frame, m.is_cache, m.menu_type, m.visible, m.status, if(m.tenant_id = 0 and ( -1 != #{enterpriseId} or 0 != #{enterpriseId} ),'1','0') as is_main,
		ifnull(perms, '') as perms, m.icon, m.create_time
		from sys_menu m
		where 1 = 1
		<if test="menuId != null">and m.menu_id != #{menuId}</if>
		<if test="status != null and status != ''">and m.status = #{status}</if>
		<choose>
			<when test="params.onlyList != null and params.onlyList.size() > 0">
				and m.menu_id in
				<foreach collection="params.onlyList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
			<when test="params.excludeList != null and params.excludeList.size() > 0">
				and m.menu_id not in
				<foreach collection="params.excludeList" index="index" item="item" open="(" separator="," close=")">
					#{item.systemMenuId}
				</foreach>
			</when>
		</choose>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by m.parent_id, m.sort
	</select>

	<select id="buildSystemMenuTreeSelectOnlyPublic" parameterType="SysMenu" resultMap="SysMenuResult">
		select m.menu_id, m.system_id, m.menu_name, if(m.parent_id = 0, m.system_id, m.parent_id) as parent_id, m.sort, m.path, m.component, m.is_frame, m.is_cache, m.menu_type, m.visible, m.status, if(m.tenant_id = 0 and ( -1 != #{enterpriseId} or 0 != #{enterpriseId} ),'1','0') as is_main,
		ifnull(perms, '') as perms, m.icon, m.create_time
		from sys_menu m
		where m.tenant_id = 0
		<if test="menuId != null">and m.menu_id != #{menuId}</if>
		<if test="status != null and status != ''">and m.status = #{status}</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by m.parent_id, m.sort
	</select>

	<select id="selectMenuById" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="selectVo"/>
		where m.menu_id = #{menuId}
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<insert id="insertMenu" parameterType="SysMenu">
		insert into sys_menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">                            menu_id                         ,</if>
			<if test="systemId != null">                                  system_id                       ,</if>
			<if test="parentId != null and parentId != 0">                parent_id                       ,</if>
			<if test="menuName != null and menuName != ''">               menu_name                       ,</if>
			<if test="path != null and path != ''">                       path                            ,</if>
			<if test="component != null and component != ''">             component                       ,</if>
			<if test="isFrame != null and isFrame != ''">                 is_frame                        ,</if>
			<if test="isCache != null and isCache != ''">                 is_cache                        ,</if>
			<if test="menuType != null and menuType != ''">               menu_type                       ,</if>
			<if test="visible != null">                                   visible                         ,</if>
			<if test="perms !=null and perms != ''">                      perms                           ,</if>
			<if test="icon != null and icon != ''">                       icon                            ,</if>
			<if test="sort != null">                                      sort                            ,</if>
			<if test="status != null and status != ''">                   status                          ,</if>
			<if test="createBy != null">                				  create_by                       ,</if>
			<if test="remark != null and remark != ''">                   remark                          ,</if>
			<if test="enterpriseId != null">		  					  tenant_id	                      ,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">                            #{Id}                           ,</if>
			<if test="systemId != null">                                  #{systemId}                     ,</if>
			<if test="parentId != null and parentId != 0">                #{parentId}                     ,</if>
			<if test="menuName != null and menuName != ''">               #{menuName}                     ,</if>
			<if test="path != null and path != ''">                       #{path}                         ,</if>
			<if test="component != null and component != ''">             #{component}                    ,</if>
			<if test="isFrame != null and isFrame != ''">                 #{isFrame}                      ,</if>
			<if test="isCache != null and isCache != ''">                 #{isCache}                      ,</if>
			<if test="menuType != null and menuType != ''">               #{menuType}                     ,</if>
			<if test="visible != null">                                   #{visible}                      ,</if>
			<if test="perms !=null and perms != ''">                      #{perms}                        ,</if>
			<if test="icon != null and icon != ''">                       #{icon}                         ,</if>
			<if test="sort != null">                                      #{sort}                         ,</if>
			<if test="status != null and status != ''">                   #{status}                       ,</if>
			<if test="createBy != null">               	 				  #{createBy}                     ,</if>
			<if test="remark != null and remark != ''">                   #{remark}                       ,</if>
			<if test="enterpriseId != null">							  #{enterpriseId}			      ,</if>
		</trim>
	</insert>

	<update id="updateMenu" parameterType="SysMenu">
		update sys_menu
		<trim prefix="SET" suffixOverrides=",">
			<if test="systemId != null">                                  system_id = #{systemId}         ,</if>
			<if test="menuName != null and menuName != ''">               menu_name = #{menuName}         ,</if>
			<if test="parentId != null">                                  parent_id = #{parentId}         ,</if>
			<if test="path != null and path != ''">                       path = #{path}                  ,</if>
			<if test="component != null">                                 component = #{component}        ,</if>
			<if test="isFrame != null and isFrame != ''">                 is_frame = #{isFrame}           ,</if>
			<if test="isCache != null and isCache != ''">                 is_cache = #{isCache}           ,</if>
			<if test="menuType != null and menuType != ''">               menu_type = #{menuType}         ,</if>
			<if test="visible != null">                                   visible = #{visible}            ,</if>
			<if test="perms !=null">                                      perms = #{perms}                ,</if>
			<if test="icon !=null and icon != ''">                        icon = #{icon}                  ,</if>
			<if test="sort != null">                                      sort = #{sort}                  ,</if>
			<if test="status != null and status != ''">                   status = #{status}              ,</if>
			<if test="updateBy != null">                				  update_by = #{updateBy}         ,</if>
			<if test="remark != null and remark != ''">                   remark = #{remark}              ,</if>
		</trim>
		where menu_id = #{menuId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</update>

	<delete id="deleteMenuById" parameterType="SysMenu">
		update sys_menu
		set del_flag = 1
		where menu_id = #{menuId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</delete>

	<select id="checkMenuNameUnique" parameterType="SysMenu" resultMap="SysMenuResult">
		<include refid="checkVo"/>
		where m.menu_name=#{menuName} and m.parent_id = #{parentId}
		<!-- 数据范围过滤 -->
		${params.dataScope}
		limit 1
	</select>

	<select id="hasChildByMenuId" parameterType="SysMenu" resultType="Integer">
		<include refid="countVo"/>
		where m.parent_id = #{menuId}
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
</mapper>
