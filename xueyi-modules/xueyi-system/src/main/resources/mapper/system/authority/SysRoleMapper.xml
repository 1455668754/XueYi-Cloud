<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.system.authority.mapper.SysRoleMapper">

	<resultMap type="SysRole" id="SysRoleResult">
		<id     property="roleId"             	column="role_id"               />
		<result property="roleCode"           	column="role_code"             />
		<result property="roleName"           	column="role_name"             />
		<result property="roleKey"            	column="role_key"              />
		<result property="dataScope"          	column="data_scope"            />
		<result property="menuCheckStrictly"  	column="menu_check_strictly"   />
		<result property="deptCheckStrictly"  	column="dept_check_strictly"   />
		<result property="type"   				column="type"   	 		   />
		<result property="deriveId"   			column="derive_id"   	 	   />
		<result property="sort"   				column="sort"   	 		   />
		<result property="status"     			column="status"      		   />
		<result property="createBy"   		    column="create_by"             />
		<result property="createName"   	    column="create_name"           />
		<result property="createTime" 		    column="create_time"           />
		<result property="updateBy"   	        column="update_by"             />
		<result property="updateName"           column="update_name"           />
		<result property="updateTime" 	        column="update_time"           />
		<result property="remark" 				column="remark" 	 		   />
	</resultMap>

	<sql id="permVo">
		select distinct r.role_id, r.role_code, r.role_name, r.role_key, r.data_scope, r.status
		from sys_role r
				 left join sys_dept_role dr on dr.role_id = r.role_id
				 left join sys_post_role pr on pr.role_id = r.role_id
				 left join sys_user_role ur on ur.role_id = r.role_id
	</sql>
	<sql id="selectVo">
		select distinct r.role_id, r.role_code, r.role_name, r.role_key, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.sort, r.status, r.create_by, r.create_time, r.update_by, r.update_time, r.remark
		from sys_role r
				 left join sys_user_role ur on ur.role_id = r.role_id
				 left join sys_user u on u.user_id = ur.user_id
				 left join sys_dept d on u.dept_id = d.dept_id
				 left join sys_post p on u.post_id = p.post_id
	</sql>

	<sql id="selectAllVo">
		select distinct r.role_id, r.role_code, r.role_name, r.role_key
		from sys_role r
	</sql>

	<sql id="checkVo">
		select distinct r.role_id, r.role_code, r.role_name, r.role_key, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, r.sort, r.status, r.create_by, r.create_time, r.update_by, r.update_time, r.remark
		from sys_role r
	</sql>

	<!--未登录用户的登录校验方法，不允许加访问控制-->
	<select id="checkLoginRolePermission" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="permVo"/>
		WHERE dr.dept_id = #{params.deptId} or pr.post_id = #{params.postId} or ur.user_id = #{params.userId} and r.del_flag = 0 and r.tenant_id = #{enterpriseId}
	</select>

	<select id="selectRoleAll" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectAllVo"/>
		WHERE r.status = '0'
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectRolesByUserName" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectVo"/>
		WHERE u.user_name = #{params.userName} and u.del_flag = 0 and r.del_flag = 0
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectRoleList" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectVo"/>
		where 1 = 1
		<if test="roleCode != null and roleCode != ''">
			AND r.role_code like concat('%', #{roleCode}, '%')
		</if>
		<if test="roleName != null and roleName != ''">
			AND r.role_name like concat('%', #{roleName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND r.status = #{status}
		</if>
		<if test="roleKey != null and roleKey != ''">
			AND r.role_key like concat('%', #{roleKey}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by r.sort
	</select>

	<select id="selectRoleById" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="selectVo"/>
		where r.role_id = #{roleId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</select>

	<insert id="insertRole" parameterType="SysRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">							role_id					        ,</if>
			<if test="roleCode != null and roleCode != ''">				role_code				        ,</if>
			<if test="roleName != null and roleName != ''">				role_name				        ,</if>
			<if test="roleKey != null and roleKey != ''">				role_key				        ,</if>
			<if test="dataScope != null and dataScope != ''">			data_scope				        ,</if>
			<if test="menuCheckStrictly != null">						menu_check_strictly		        ,</if>
			<if test="deptCheckStrictly != null">						dept_check_strictly		        ,</if>
			<if test="type != null and type != ''">						type					        ,</if>
			<if test="deriveId != null">								derive_id					    ,</if>
			<if test="sort != null">									sort					        ,</if>
			<if test="status != null and status != ''">					status					        ,</if>
			<if test="createBy != null">								create_by				        ,</if>
			<if test="remark != null and remark != ''">					remark					        ,</if>
			<if test="enterpriseId != null">							tenant_id				        ,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="Id != null and Id != 0">							#{Id}					        ,</if>
			<if test="roleCode != null and roleCode != ''">				#{roleCode}				        ,</if>
			<if test="roleName != null and roleName != ''">				#{roleName}				        ,</if>
			<if test="roleKey != null and roleKey != ''">				#{roleKey}				        ,</if>
			<if test="dataScope != null and dataScope != ''">			#{dataScope}			        ,</if>
			<if test="menuCheckStrictly != null">						#{menuCheckStrictly}	        ,</if>
			<if test="deptCheckStrictly != null">						#{deptCheckStrictly}	        ,</if>
			<if test="type != null and type != ''">						#{type}					        ,</if>
			<if test="deriveId != null">								#{deriveId}					    ,</if>
			<if test="sort != null">									#{sort}					        ,</if>
			<if test="status != null and status != ''">					#{status}				        ,</if>
			<if test="createBy != null">								#{createBy}				        ,</if>
			<if test="remark != null and remark != ''">					#{remark}				        ,</if>
			<if test="enterpriseId != null">							#{enterpriseId}			        ,</if>
		</trim>
	</insert>

	<update id="updateRole" parameterType="SysRole">
		update sys_role
		<trim prefix="SET" suffixOverrides=",">
			<if test="roleCode != null and roleCode != ''">							role_code = #{roleCode}						,</if>
			<if test="roleName != null and roleName != ''">							role_name = #{roleName}						,</if>
			<if test="roleKey != null and roleKey != ''">							role_key = #{roleKey}						,</if>
			<if test="dataScope != null and dataScope != ''">						data_scope = #{dataScope}					,</if>
			<if test="menuCheckStrictly != null">									menu_check_strictly = #{menuCheckStrictly}	,</if>
			<if test="deptCheckStrictly != null">									dept_check_strictly = #{deptCheckStrictly}	,</if>
			<if test="sort != null">												sort = #{sort}								,</if>
			<if test="status != null and status != ''">								status = #{status}							,</if>
			<if test="updateBy != null">											update_by = #{updateBy}						,</if>
			<if test="remark != null">												remark = #{remark}							,</if>
		</trim>
		where role_id = #{roleId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</update>

	<update id="updateRoleStatus" parameterType="SysRole">
		update sys_role
		<trim prefix="SET" suffixOverrides=",">
			<if test="status != null and status != ''">				status = #{status}					,</if>
		</trim>
		where role_id = #{roleId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</update>

	<update id="updateRoleDataScope" parameterType="SysRole">
		update sys_role
		<trim prefix="SET" suffixOverrides=",">
			<if test="dataScope != null and dataScope != ''">			data_scope = #{dataScope}			,</if>
		</trim>
		where role_id = #{roleId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</update>

	<delete id="deleteRoleById" parameterType="SysRole">
		update sys_role
		set del_flag = 1
		where role_id = #{roleId}
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</delete>

	<delete id="deleteRoleByIds" parameterType="SysRole">
		update sys_role
		set del_flag = 1
		where role_id in
		<foreach item="roleId" collection="params.Ids" open="(" separator="," close=")">
			#{roleId}
		</foreach>
		<!-- 数据范围过滤 -->
		${params.updateScope}
	</delete>

	<select id="checkRoleCodeUnique" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="checkVo"/>
		where r.role_key=#{roleCode}
		<!-- 数据范围过滤 -->
		${params.dataScope}
		limit 1
	</select>

	<select id="checkRoleNameUnique" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="checkVo"/>
		where r.role_name=#{roleName}
		<!-- 数据范围过滤 -->
		${params.dataScope}
		limit 1
	</select>

	<select id="checkRoleKeyUnique" parameterType="SysRole" resultMap="SysRoleResult">
		<include refid="checkVo"/>
		where r.role_key=#{roleKey}
		<!-- 数据范围过滤 -->
		${params.dataScope}
		limit 1
	</select>
</mapper>
