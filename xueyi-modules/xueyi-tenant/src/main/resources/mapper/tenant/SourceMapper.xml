<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueyi.tenant.mapper.SourceMapper">

    <resultMap type="Source" id="SourceResult">
        <id     property="sourceId"         column="source_id"                              />
        <result property="name"             column="name"                                   />
        <result property="databaseType"     column="database_type"                          />
        <result property="isChange"         column="is_change"                              />
        <result property="slave"            column="slave"                                  />
        <result property="driverClassName"  column="driver_class_name"                      />
        <result property="urlPrepend"       column="url_prepend"                            />
        <result property="urlAppend"        column="url_append"                             />
        <result property="username"         column="username"                               />
        <result property="password"         column="password"                               />
        <result property="type"             column="type"                                   />
        <result property="sort"             column="sort"                                   />
        <result property="status"           column="status"                                 />
        <result property="createBy"   		column="create_by"                              />
        <result property="createName"   	column="create_name"                            />
        <result property="createTime"       column="create_time"                            />
        <result property="updateBy"   		column="update_by"                              />
        <result property="updateName"   	column="update_name"                            />
        <result property="updateTime"       column="update_time"                            />
        <collection property="values" javaType="java.util.List" resultMap="valuesResult"    />
    </resultMap>

    <resultMap type="Source" id="valuesResult">
        <id     property="sourceId"         column="sub_source_id"                          />
        <result property="name"             column="sub_name"                               />
        <result property="databaseType"     column="sub_database_type"                      />
        <result property="isChange"         column="sub_is_change"                          />
        <result property="slave"            column="sub_slave"                              />
        <result property="driverClassName"  column="sub_driver_class_name"                  />
        <result property="urlPrepend"       column="sub_url_prepend"                        />
        <result property="urlAppend"        column="sub_url_append"                         />
        <result property="username"         column="sub_username"                           />
        <result property="password"         column="sub_password"                           />
        <result property="type"             column="sub_type"                               />
        <result property="sort"             column="sub_sort"                               />
        <result property="status"           column="sub_status"                             />
    </resultMap>

    <sql id="listVo">
        select e.source_id, e.name, e.database_type, e.is_change, e.slave, e.type, e.sort, e.status, e.create_by, e.create_time, e.update_by, e.update_time
        from xy_tenant_source e
    </sql>

    <sql id="selectVo">
        select e.source_id, e.name, e.database_type, e.is_change, e.slave, e.driver_class_name, e.url_prepend, e.url_append, e.username, e.password, e.type, e.sort, e.status, e.create_by, e.create_time, e.update_by, e.update_time
        from xy_tenant_source e
    </sql>

    <sql id="containVo">
        select e.source_id, e.name, e.database_type, e.is_change, e.slave, e.type, e.status
        from xy_tenant_source e
        left join xy_tenant_separation ts on ts.read_id = e.source_id
    </sql>

    <sql id="subVo">
        select e.source_id, e.name, e.database_type, e.slave, e.type, e.sort, e.status,
               ts.read_id as sub_source_id, ts.read_slave as sub_slave
        from xy_tenant_source e
                 left join xy_tenant_separation ts on ts.write_id = e.source_id
    </sql>

    <select id="mainSelectSourceList" parameterType="Source" resultMap="SourceResult">
        <include refid="listVo"/>
        where e.del_flag = 0
        <if test="name != null  and name != ''"> and e.name like concat('%', #{name}, '%')</if>
        <if test="databaseType != null  and databaseType != ''"> and e.database_type = #{databaseType}</if>
        <if test="slave != null  and slave != ''"> and e.slave like concat('%', #{slave}, '%')</if>
        <if test="type != null  and type != ''"> and e.type = #{type}</if>
        <if test="status != null  and status != ''"> and e.status = #{status}</if>
        order by e.sort
    </select>

    <select id="mainSelectSourceBySourceId" parameterType="Source" resultMap="SourceResult">
        <include refid="selectVo"/>
        where e.source_id = #{sourceId} and e.del_flag = 0
    </select>

    <select id="mainSelectContainReadList" parameterType="Source" resultMap="SourceResult">
        <include refid="containVo"/>
        where e.status = '0' and e.del_flag = 0 and ( ( e.type = '1' and ts.read_id is null ) or ( ts.write_id = #{sourceId} )
        <if test="sourceId != null"> or (e.type = '0' and e.source_id = #{sourceId} )</if> )
        order by e.sort
    </select>

    <select id="mainSelectContainWriteList" parameterType="Source" resultMap="SourceResult">
        <include refid="listVo"/>
        where e.status = '0' and e.del_flag = 0 and ( e.type = '0' or e.type = '2' ) and e.slave != 'master'
        order by e.sort
    </select>

    <select id="mainSelectSeparationById" parameterType="Source" resultMap="SourceResult">
        <include refid="subVo"/>
        where e.source_id = #{sourceId} and e.del_flag = 0
    </select>

    <insert id="mainInsertSource" parameterType="Source">
        insert into xy_tenant_source
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="snowflakeId != null">                               source_id                    ,</if>
            <if test="name != null and name != ''">                       name                         ,</if>
            <if test="driverClassName != null and driverClassName != ''"> driver_class_name            ,</if>
            <if test="slave != null and slave != ''">                     slave                        ,</if>
            <if test="urlPrepend != null and urlPrepend != ''">           url_prepend                  ,</if>
            <if test="urlAppend != null and urlAppend != ''">             url_append                   ,</if>
            <if test="username != null and username != ''">               username                     ,</if>
            <if test="password != null and password != ''">               password                     ,</if>
            <if test="type != null and type != ''">                       type                         ,</if>
            <if test="sort != null and sort != ''">                       sort                         ,</if>
            <if test="status != null and status != ''">                   status                       ,</if>
            <if test="createBy != null">                                  create_by                    ,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="snowflakeId != null">                               #{snowflakeId}               ,</if>
            <if test="name != null and name != ''">                       #{name}                      ,</if>
            <if test="driverClassName != null and driverClassName != ''"> #{driverClassName}           ,</if>
            <if test="slave != null and slave != ''">                     #{slave}                     ,</if>
            <if test="urlPrepend != null and urlPrepend != ''">           #{urlPrepend}                ,</if>
            <if test="urlAppend != null and urlAppend != ''">             #{urlAppend}                 ,</if>
            <if test="username != null and username != ''">               #{username}                  ,</if>
            <if test="password != null and password != ''">               #{password}                  ,</if>
            <if test="type != null and type != ''">                       #{type}                      ,</if>
            <if test="sort != null and sort != ''">                       #{sort}                      ,</if>
            <if test="status != null and status != ''">                   #{status}                    ,</if>
            <if test="createBy != null">                                  #{createBy}                  ,</if>
        </trim>
    </insert>

    <update id="mainUpdateSource" parameterType="Source">
        update xy_tenant_source
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">                        name = #{name}                            ,</if>
            <if test="sort != null and sort != ''">                        sort = #{sort}                            ,</if>
            <if test="updateBy != null">                                   update_by = #{updateBy}                   ,</if>
        </trim>
        where source_id = #{sourceId} and del_flag = 0
    </update>

    <update id="mainUpdateSourceStatus" parameterType="Source">
        update xy_tenant_source
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null and status != ''">                    status = #{status}                        ,</if>
            <if test="updateBy != null">                                   update_by = #{updateBy}                   ,</if>
        </trim>
        where source_id = #{sourceId} and is_change != 'Y' and del_flag = 0
    </update>

    <update id="mainUpdateSourceSort" parameterType="Source">
        update xy_tenant_source set sort =
        <foreach collection="params.Ids" item="item" index="index" separator=" " open="case source_id" close="end">
            when #{item.sourceId} then #{item.sort}
        </foreach>
        where del_flag = 0 and source_id in
        <foreach collection="params.Ids" item="item" index="index" separator="," open="(" close=")">
            #{item.sourceId}
        </foreach>
    </update>

    <delete id="mainDeleteSourceById" parameterType="Source">
        update xy_tenant_source
        set del_flag = 1
        where source_id = #{sourceId} and is_change != 'Y' and del_flag = 0
    </delete>

    <delete id="mainDeleteSeparationByValueId" parameterType="Source">
        delete from xy_tenant_separation
        where write_id = #{sourceId} or read_id = #{sourceId}
    </delete>

    <delete id="mainDeleteSeparationBySourceId" parameterType="Source">
        delete from xy_tenant_separation
        where write_id = #{sourceId}
        <if test="type != null and type == '0'"> and read_id != #{sourceId}</if>
    </delete>

    <insert id="mainBatchSeparation" parameterType="Source">
        insert into xy_tenant_separation( write_id, write_slave, read_id, read_slave) values
        <foreach item="item" index="index" collection="values" separator=",">
            ( #{sourceId}, #{slave}, #{item.sourceId}, #{item.slave} )
        </foreach>
    </insert>

    <select id="mainCheckStrategySourceBySourceId" parameterType="Source" resultType="int">
        select count(source_id) from xy_tenant_strategy_source e
        where e.source_id = #{sourceId} and e.del_flag = 0
    </select>

    <select id="mainCheckSeparationSourceByWriteId" parameterType="Source" resultType="int">
        select count(write_id) from xy_tenant_separation e
        where e.write_id = #{sourceId} and e.del_flag = 0
    </select>

    <select id="mainCheckSeparationSourceByReadId" parameterType="Source" resultType="int">
        select count(read_id) from xy_tenant_separation e
        where e.read_id = #{sourceId} and e.del_flag = 0
    </select>
</mapper>